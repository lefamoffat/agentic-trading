---
description: Documentation Accuracy & Verification
globs: 
alwaysApply: false
---
# Documentation Accuracy & Verification

## Critical Principle: Verify Before Document

**NEVER** document features, files, or functionality that doesn't actually exist in the codebase.

## Pre-Documentation Checklist

Before writing or updating any documentation:

1. **✅ VERIFY FILE EXISTENCE**
   ```bash
   # Always check if referenced files/scripts actually exist
   ls -la scripts/analysis/run_simulation.py  # Does this exist?
   find . -name "simulation_mode.md"          # Does this exist?
   ```

2. **✅ VERIFY FUNCTIONALITY WORKS**
   ```bash
   # Test that referenced commands actually work
   uv run scripts/training/train_agent.py --help
   uv run streamlit run scripts/analysis/app.py  # Does this run?
   ```

3. **✅ VERIFY IMPORT PATHS**
   ```bash
   # Test that documented imports work
   uv run python -c "from src.environment import TradingEnv"
   ```

4. **✅ VERIFY CONFIGURATION FILES**
   ```bash
   # Ensure referenced configs exist and are valid
   ls -la configs/agent_config.yaml
   uv run python -c "import yaml; yaml.safe_load(open('configs/trading_config.yaml'))"
   ```

## Documentation Update Process

### 1. When Features Are REMOVED
- **IMMEDIATELY** remove all documentation references
- Update README, docs/, and any setup instructions
- Remove from Quick Start guides
- Update project structure diagrams

### 2. When Features Are ADDED
- **FIRST** implement and test the feature
- **THEN** document it with examples
- Include in integration tests
- Update relevant documentation sections

### 3. When Features Are REFACTORED
- Update import paths in documentation
- Update file structure references
- Verify all examples still work
- Update CLI command references

## Common Documentation Errors to Avoid

❌ **DON'T:**
- Reference deleted files in README
- Document features that exist "in theory" but not in code
- Copy documentation patterns without verifying applicability
- Assume file structure from memory

✅ **DO:**
- Use `ls`, `find`, or file browsers to verify file existence
- Test all documented commands before committing
- Keep documentation synchronized with actual codebase
- Remove documentation for deleted features immediately

## Documentation Review Checklist

- [ ] All referenced files actually exist
- [ ] All CLI commands work as documented  
- [ ] All import statements are valid
- [ ] Project structure matches reality
- [ ] Quick start instructions are executable
- [ ] Configuration files exist and parse correctly
- [ ] No references to deleted/moved features

## Violation Examples

```markdown
# ❌ BAD - Documents non-existent file
uv run streamlit run scripts/analysis/run_simulation.py

# ❌ BAD - References deleted documentation  
[Simulation Guide](mdc:docs/simulation_mode.md)

# ❌ BAD - Outdated project structure
├── environments/  # Should be 'environment/'

# ✅ GOOD - Verified before documenting
uv run scripts/training/train_agent.py --symbol "EUR/USD"
```

## Enforcement

Documentation accuracy violations are **automatic review failures**. Always verify reality before updating documentation.
